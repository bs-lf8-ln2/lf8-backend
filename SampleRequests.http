@token = eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzUFQ0dldiNno5MnlQWk1EWnBqT1U0RjFVN0lwNi1ELUlqQWVGczJPbGU0In0.eyJleHAiOjE3MzkxMTE4NjUsImlhdCI6MTczOTEwODI2NSwianRpIjoiOTMyZGMxYWYtNjRkMC00ODY2LThjM2QtNjA5YWY4ZmYxZjI2IiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9hay5zenV0LmRldi9hdXRoL3JlYWxtcy9zenV0IiwiYXVkIjoiYWNjb3VudCIsInN1YiI6IjU1NDZjZDIxLTk4NTQtNDMyZi1hNDY3LTRkZTNlZWRmNTg4OSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImVtcGxveWVlLW1hbmFnZW1lbnQtc2VydmljZSIsInNlc3Npb25fc3RhdGUiOiJhYmM2NmNiMS0zM2U1LTRlM2MtYThjZS03ZTRjNWFhZmVjNmEiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHA6Ly9sb2NhbGhvc3Q6NDIwMCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsicHJvZHVjdF9vd25lciIsIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1zenV0IiwidW1hX2F1dGhvcml6YXRpb24iLCJ1c2VyIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJlbWFpbCBwcm9maWxlIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsInByZWZlcnJlZF91c2VybmFtZSI6InVzZXIifQ.HSiUsB6_lE_UQyTIpVIGGlZEzi9h3kiNy_bFpKWsMB7Uddx8CXiIh_SZuGfPhw4Rqp6u-YXHiL9IAnwlVJdu9SrEJGK4AymjWZX4Y0E20ChVjwkQp4KZZtTydhecKPF6dJSG19cqc3o5AMlwhgRZ8EmM2yGKlwGgBg9yDAtN5BvvMynhHQDrxBtAmCP4Zse85rTeDYsHgQuLOZ_AHVPFAuvSe2pz0jQg2C2rj3_g9pEFXwu8tdEfxRhNtjevPq774V3a-TlnKXJj0exrMkl6JiyuRd4Gs5PX3tbjgIXwmVQDtiSGKAi_jh4CDccHlVAjttlXDGncysKumm94LqaYwg
###
GET localhost:8080/welcome

### 1. Create Qualification - Make sure to have a valid token
POST http://localhost:8080/qualifications
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "skill": "Java"
}

### 2. Create Employee
POST http://localhost:8080/employee
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "firstName": "John",
  "lastName": "Doe",
  "email": "john.doe@example.com",
  "department": "IT",
  "qualificationIds": [
    1
  ]
}

### 3. Create Customer
POST http://localhost:8080/customer
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "ACME Corp"
}

### 4. Create Project 1
POST http://localhost:8080/projects
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Project Alpha",
  "projectManager": 1,
  "customer": 1,
  "startDate": "2024-01-15",
  "endDate": "2024-06-30",
  "employeeIds": [
    1
  ]
}

### 5. Create Project 2
POST http://localhost:8080/projects
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Project Beta",
  "projectManager": 1,
  "customer": 1,
  "startDate": "2024-02-15",
  "endDate": "2024-07-30",
  "employeeIds": [
    1
  ]
}

### Test Pagination - Get first page (50 items)
GET http://localhost:8080/projects?page=0&size=50
Authorization: Bearer {{token}}

### Test Pagination - Get second page
GET http://localhost:8080/projects?page=1&size=50
Authorization: Bearer {{token}}

### Test Filter by Manager
GET http://localhost:8080/projects?managerId=1
Authorization: Bearer {{token}}

### Test Filter by Customer
GET http://localhost:8080/projects?customerId=1
Authorization: Bearer {{token}}

### Test Filter by both Manager and Customer
GET http://localhost:8080/projects?managerId=1&customerId=1
Authorization: Bearer {{token}}

### Test Unauthorized Access (should return 401)
GET http://localhost:8080/projects

### Test with invalid token (should return 401)
GET http://localhost:8080/projects
Authorization: Bearer invalid_token










### Add Employee to Project Beta
POST http://localhost:8080/projects/Project Beta/employees
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "employeeId": 1,
  "qualification": "Java"
}

### Test 1: Add employee to project (Success case)
POST http://localhost:8080/projects/Project Alpha/employees
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "employeeId": 1,
  "qualification": "Java"
}

### Test 2: Add non-existent employee (Should fail)
POST http://localhost:8080/projects/Project Alpha/employees
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "employeeId": 999,
  "qualification": "Java"
}

### Test 3: Add employee with wrong qualification (Should fail)
POST http://localhost:8080/projects/Project Alpha/employees
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "employeeId": 1,
  "qualification": "Python"
}

### Test 4: Add employee to non-existent project (Should fail)
POST http://localhost:8080/projects/NonExistentProject/employees
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "employeeId": 1,
  "qualification": "Java"
}


### Test 3: Check employee's current projects
GET http://localhost:8080/employee/1/projects
Authorization: Bearer {{token}}
